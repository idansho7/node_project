{"ast":null,"code":"import axios from \"axios\";\nconst api = process.env.REACT_APP_API + \"/cardLists\" || \"\";\nexport function addCardList(userId) {\n  return axios.post(api, {\n    userId: userId,\n    cards: []\n  });\n}\nexport async function getAllCards() {\n  let res = await axios.get(api);\n  let allCardsArr = [];\n  for (const list of res.data) {\n    for (const card of list.cards) {\n      allCardsArr.push(card);\n    }\n  }\n  return new Promise((res, rej) => {\n    if (allCardsArr.length) {\n      res(allCardsArr);\n    } else {\n      rej(\"no cards!\");\n    }\n  });\n}\nexport async function addCardToList(userId, card) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  let cardArr = res.data[0].cards;\n  cardArr.push(card);\n  return await axios.patch(`${api}/${res.data[0].id}`, {\n    cards: cardArr\n  });\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","addCardList","userId","post","cards","getAllCards","res","get","allCardsArr","list","data","card","push","Promise","rej","length","addCardToList","cardArr","patch","id"],"sources":["C:/Users/shosh/OneDrive/שולחן העבודה/ReactProject/reactproject/src/services/cardList.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport Card from \"../interfaces/card\";\r\n\r\nconst api: string = process.env.REACT_APP_API + \"/cardLists\" || \"\";\r\nexport function addCardList(userId: number){\r\n    return axios.post(api,{userId: userId,cards: []});\r\n}\r\n\r\nexport async function getAllCards(){\r\n    let res = await axios.get(api);\r\n    let allCardsArr: Card[] = []\r\n    for (const list of res.data) {\r\n        for (const card of list.cards) {\r\n            allCardsArr.push(card);\r\n        }\r\n    }\r\n    return new Promise((res,rej)=>{\r\n        if(allCardsArr.length){\r\n            res(allCardsArr);\r\n        }else{\r\n            rej(\"no cards!\")\r\n        }\r\n\r\n    })\r\n    \r\n}\r\n\r\nexport async function addCardToList (userId: number,card:Card){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    let cardArr = res.data[0].cards;\r\n    cardArr.push(card);\r\n    return await axios.patch(`${api}/${res.data[0].id}`,{cards: cardArr});\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAG,YAAY,IAAI,EAAE;AAClE,OAAO,SAASC,WAAW,CAACC,MAAc,EAAC;EACvC,OAAON,KAAK,CAACO,IAAI,CAACN,GAAG,EAAC;IAACK,MAAM,EAAEA,MAAM;IAACE,KAAK,EAAE;EAAE,CAAC,CAAC;AACrD;AAEA,OAAO,eAAeC,WAAW,GAAE;EAC/B,IAAIC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACV,GAAG,CAAC;EAC9B,IAAIW,WAAmB,GAAG,EAAE;EAC5B,KAAK,MAAMC,IAAI,IAAIH,GAAG,CAACI,IAAI,EAAE;IACzB,KAAK,MAAMC,IAAI,IAAIF,IAAI,CAACL,KAAK,EAAE;MAC3BI,WAAW,CAACI,IAAI,CAACD,IAAI,CAAC;IAC1B;EACJ;EACA,OAAO,IAAIE,OAAO,CAAC,CAACP,GAAG,EAACQ,GAAG,KAAG;IAC1B,IAAGN,WAAW,CAACO,MAAM,EAAC;MAClBT,GAAG,CAACE,WAAW,CAAC;IACpB,CAAC,MAAI;MACDM,GAAG,CAAC,WAAW,CAAC;IACpB;EAEJ,CAAC,CAAC;AAEN;AAEA,OAAO,eAAeE,aAAa,CAAEd,MAAc,EAACS,IAAS,EAAC;EAC1D,IAAIL,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,GAAEV,GAAI,WAAUK,MAAO,EAAC,CAAC;EACpD,IAAIe,OAAO,GAAGX,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAACN,KAAK;EAC/Ba,OAAO,CAACL,IAAI,CAACD,IAAI,CAAC;EAClB,OAAO,MAAMf,KAAK,CAACsB,KAAK,CAAE,GAAErB,GAAI,IAAGS,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAACS,EAAG,EAAC,EAAC;IAACf,KAAK,EAAEa;EAAO,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}