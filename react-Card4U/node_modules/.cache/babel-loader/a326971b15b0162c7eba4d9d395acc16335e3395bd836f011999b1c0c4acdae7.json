{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios from \"axios\";\nconst api = process.env.REACT_APP_API + \"/users\" || \"\";\nexport function checkUser(userToCheck) {\n  return axios.get(`${api}?email=${userToCheck.email}&password=${userToCheck.password}`);\n}\nexport async function AddUser(userToAdd) {\n  let email = 0;\n  let pass = 0;\n  let resPass = await axios.get(`${api}?password=${userToAdd.password}`);\n  console.log(resPass.data);\n  if (resPass.data.length) {\n    pass++;\n  }\n  let resEmail = await axios.get(`${api}?email=${userToAdd.email}`);\n  if (resEmail.data.length) {\n    email++;\n  }\n  return new Promise((res, rej) => {\n    if (pass > 0) {\n      rej(\"password\");\n    }\n    if (email > 0) {\n      rej(\"email\");\n    }\n    res(axios.post(api, userToAdd));\n  });\n}\n_c = AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","checkUser","userToCheck","get","email","password","AddUser","userToAdd","pass","resPass","console","log","data","length","resEmail","Promise","res","rej","post"],"sources":["C:/Users/shosh/OneDrive/שולחן העבודה/ReactProject/reactproject/src/services/userService.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport axios from \"axios\";\r\nimport User from \"../interfaces/user\";\r\n\r\n\r\nconst api: string = process.env.REACT_APP_API + \"/users\" || \"\";\r\n\r\nexport function checkUser(userToCheck: User){\r\n    return axios.get(`${api}?email=${userToCheck.email}&password=${userToCheck.password}`)\r\n}\r\n\r\nexport async function AddUser(userToAdd: User){\r\n    let email = 0;\r\n    let pass = 0;\r\n    let resPass = await axios.get(`${api}?password=${userToAdd.password}`);\r\n    console.log(resPass.data);\r\n    if(resPass.data.length){\r\n        pass++;\r\n    }\r\n\r\n    let resEmail = await axios.get(`${api}?email=${userToAdd.email}`);\r\n    if(resEmail.data.length){\r\n        email++;\r\n    }\r\n\r\n    return new Promise((res,rej) => {\r\n        if(pass > 0){\r\n            rej(\"password\")\r\n        }if(email > 0){\r\n            rej(\"email\")\r\n        }\r\n        res(axios.post(api,userToAdd))\r\n    })\r\n\r\n}\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,GAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAG,QAAQ,IAAI,EAAE;AAE9D,OAAO,SAASC,SAAS,CAACC,WAAiB,EAAC;EACxC,OAAON,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,UAASK,WAAW,CAACE,KAAM,aAAYF,WAAW,CAACG,QAAS,EAAC,CAAC;AAC1F;AAEA,OAAO,eAAeC,OAAO,CAACC,SAAe,EAAC;EAC1C,IAAIH,KAAK,GAAG,CAAC;EACb,IAAII,IAAI,GAAG,CAAC;EACZ,IAAIC,OAAO,GAAG,MAAMb,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,aAAYU,SAAS,CAACF,QAAS,EAAC,CAAC;EACtEK,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC;EACzB,IAAGH,OAAO,CAACG,IAAI,CAACC,MAAM,EAAC;IACnBL,IAAI,EAAE;EACV;EAEA,IAAIM,QAAQ,GAAG,MAAMlB,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,UAASU,SAAS,CAACH,KAAM,EAAC,CAAC;EACjE,IAAGU,QAAQ,CAACF,IAAI,CAACC,MAAM,EAAC;IACpBT,KAAK,EAAE;EACX;EAEA,OAAO,IAAIW,OAAO,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;IAC5B,IAAGT,IAAI,GAAG,CAAC,EAAC;MACRS,GAAG,CAAC,UAAU,CAAC;IACnB;IAAC,IAAGb,KAAK,GAAG,CAAC,EAAC;MACVa,GAAG,CAAC,OAAO,CAAC;IAChB;IACAD,GAAG,CAACpB,KAAK,CAACsB,IAAI,CAACrB,GAAG,EAACU,SAAS,CAAC,CAAC;EAClC,CAAC,CAAC;AAEN;AAAC,KAvBqBD,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}