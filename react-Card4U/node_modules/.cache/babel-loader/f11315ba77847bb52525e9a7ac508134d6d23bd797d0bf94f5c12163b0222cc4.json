{"ast":null,"code":"import axios from \"axios\";\nimport { successMsg } from \"./feedbacks\";\nconst api = process.env.REACT_APP_API + \"/cardlists\" || \"\";\nexport function getList() {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"userData\")).token\n    }\n  });\n}\nexport function addCardtoClist(card) {\n  return axios.post(api, card, {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"userData\")).token\n    }\n  });\n}\nexport function addCardList(userId) {\n  return axios.post(api, {\n    userId: userId,\n    cards: [],\n    quantity: 0\n  });\n}\nexport async function getAllCards() {\n  let res = await axios.get(api);\n  let allCardsArr = [];\n  for (const list of res.data) {\n    for (const card of list.cards) {\n      allCardsArr.push(card);\n    }\n  }\n  return new Promise((res, rej) => {\n    if (allCardsArr.length) {\n      res(allCardsArr);\n    } else {\n      rej(\"no cards!\");\n    }\n  });\n}\nexport async function addCardToList(userId, card) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  let cardArr = res.data[0].cards;\n  let qua = res.data[0].quantity;\n  qua++;\n  localStorage.setItem(\"quantity\", `${qua}`);\n  cardArr.push(card);\n  return await axios.patch(`${api}/${res.data[0].id}`, {\n    cards: cardArr,\n    quantity: qua\n  });\n}\nexport async function deleteCardById(userId, cardDes) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  let cardArr = res.data[0].cards;\n  let listId = res.data[0].id;\n  let qua = res.data[0].quantity;\n  qua = qua - 1;\n  for (const card of cardArr) {\n    if (card.businessDescription == cardDes) {\n      cardArr.splice(cardArr.indexOf(card), 1);\n    }\n  }\n  return new Promise((res, rej) => {\n    res(axios.patch(`${api}/${listId}`, {\n      cards: cardArr,\n      quantity: qua\n    }).then(() => {\n      successMsg(\"Card Deleted!\");\n      localStorage.setItem(\"quantity\", `${qua}`);\n    }).catch(err => console.log(err)));\n  });\n}\nexport async function getCardByDes(userId, cardDes) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  let cardArr = res.data[0].cards;\n  let cardToFind;\n  for (const card of cardArr) {\n    if (card.businessDescription == cardDes) {\n      cardToFind = card;\n    }\n  }\n  return new Promise((res, rej) => {\n    if (cardToFind == null) {\n      return rej(\"no card found\");\n    } else {\n      return res(cardToFind);\n    }\n  });\n}\nexport async function updateCardByDes(userId, newCard, cardDes) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  let cardArr = res.data[0].cards;\n  let listId = res.data[0].id;\n  let newArr = [];\n  for (let card of cardArr) {\n    if (card.businessDescription == cardDes) {\n      newArr.push(newCard);\n    } else {\n      newArr.push(card);\n    }\n  }\n  return new Promise((res, rej) => {\n    res(axios.patch(`${api}/${listId}`, {\n      cards: newArr\n    }).then(() => {}).catch(err => console.log(err)));\n  });\n}\nexport async function getCardListById(userId) {\n  let res = await axios.get(`${api}?userId=${userId}`);\n  return await axios.get(`${api}/${res.data[0].id}`);\n}","map":{"version":3,"names":["axios","successMsg","api","process","env","REACT_APP_API","getList","get","headers","Authorization","JSON","parse","localStorage","getItem","token","addCardtoClist","card","post","addCardList","userId","cards","quantity","getAllCards","res","allCardsArr","list","data","push","Promise","rej","length","addCardToList","cardArr","qua","setItem","patch","id","deleteCardById","cardDes","listId","businessDescription","splice","indexOf","then","catch","err","console","log","getCardByDes","cardToFind","updateCardByDes","newCard","newArr","getCardListById"],"sources":["C:/Users/user/Desktop/prj node+react/‏‏reactProj-Card4U סופי/reactproject/src/services/cardList.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport Card from \"../interfaces/card\";\r\nimport { successMsg } from \"./feedbacks\";\r\n\r\nconst api: string = process.env.REACT_APP_API + \"/cardlists\" || \"\";\r\n\r\nexport function getList(){\r\n    return axios.get(api,{\r\n        headers: {Authorization: JSON.parse(localStorage.getItem(\"userData\") as string).token}})\r\n}\r\n\r\nexport function addCardtoClist(card: Card){\r\n    return axios.post(api,card,{\r\n        headers: {Authorization: JSON.parse(localStorage.getItem(\"userData\") as string).token}})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function addCardList(userId: number){\r\n    return axios.post(api,{userId: userId,cards: [],quantity: 0});\r\n}\r\n\r\nexport async function getAllCards(){\r\n    let res = await axios.get(api);\r\n    let allCardsArr: Card[] = []\r\n    for (const list of res.data) {\r\n        for (const card of list.cards) {\r\n            allCardsArr.push(card);\r\n        }\r\n    }\r\n    return new Promise((res,rej)=>{\r\n        if(allCardsArr.length){\r\n            res(allCardsArr);\r\n        }else{\r\n            rej(\"no cards!\")\r\n        }\r\n\r\n    })\r\n    \r\n}\r\n\r\nexport async function addCardToList (userId: number,card:Card){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    let cardArr = res.data[0].cards;\r\n    let qua = res.data[0].quantity;\r\n    qua++;\r\n    localStorage.setItem(\"quantity\",`${qua}`);\r\n    cardArr.push(card);\r\n    return await axios.patch(`${api}/${res.data[0].id}`,{cards: cardArr, quantity: qua});\r\n}\r\nexport async function deleteCardById(userId:number, cardDes:string){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    let cardArr = res.data[0].cards;\r\n    let listId = res.data[0].id;\r\n    let qua = res.data[0].quantity;\r\n    qua = qua-1;\r\n    for (const card of cardArr) {\r\n        if(card.businessDescription == cardDes){\r\n            cardArr.splice(cardArr.indexOf(card),1);\r\n        } \r\n    }\r\n    return new Promise((res,rej) =>{\r\n        res(axios.patch(`${api}/${listId}`,{cards: cardArr, quantity: qua}).then(() => {successMsg(\"Card Deleted!\"); localStorage.setItem(\"quantity\",`${qua}`);}).catch((err) => console.log(err)));\r\n    })\r\n}\r\n\r\n\r\nexport async function getCardByDes(userId: number, cardDes:string){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    let cardArr = res.data[0].cards;\r\n    let cardToFind: Card;\r\n    \r\n    for (const card of cardArr) {\r\n        if(card.businessDescription == cardDes){\r\n            cardToFind = card;\r\n            \r\n        }\r\n    }\r\n    return new Promise((res,rej) =>{\r\n        if(cardToFind == null){\r\n            return rej(\"no card found\");\r\n        }else{\r\n            return res(cardToFind);\r\n        }\r\n    })\r\n}\r\n\r\nexport async function updateCardByDes(userId:number, newCard: Card, cardDes:string){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    let cardArr = res.data[0].cards;\r\n    let listId = res.data[0].id;\r\n    let newArr: Card[] = [];\r\n    for (let card of cardArr) {\r\n        if(card.businessDescription == cardDes){\r\n            newArr.push(newCard);\r\n        }else{\r\n            newArr.push(card);\r\n        }\r\n    }\r\n    return new Promise((res,rej) =>{\r\n        res(axios.patch(`${api}/${listId}`,{cards: newArr}).then(() => {}).catch((err) => console.log(err)));\r\n    })\r\n\r\n}\r\n\r\n\r\nexport async function getCardListById (userId:number){\r\n    let res = await axios.get(`${api}?userId=${userId}`);\r\n    return await axios.get(`${api}/${res.data[0].id}`);\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}